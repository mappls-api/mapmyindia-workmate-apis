{
  "openapi": "3.0.1",
  "info": {
    "title": "Task Management",
    "description": "\nThese APIs follow OAuth2 based security. **To know more about how to create your authorization tokens, please use our authorization token URL. More details available**  [here](https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php). <br><br>The API leverages OAuth 2.0 based security. Hence, the developer would need to send a request for an access token using their client_id and client_secret to the OAuth API. Once validated from the OAuth API, the access_token and the token_type need to be sent as Authorization header with the value: \"{`token_type`} {`access_token`}‚Äù. <br><strong>Authorization</strong>: `token_type` `access_token`.<br><br>",
    "termsOfService": "https://www.mapmyindia.com/about/terms-conditions",
    "contact": {
      "email": "apisupport@mapmyindia.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://workmate.mapmyindia.com/apis/"
    }
  ],
  "paths": {
    "/tasks": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "operationId": "getTask",
        "summary": "To get the list of tasks and their details",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "Header for this API. Available values are v1.0.0, Default value is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Enter the start time for the select period. It is in Epoch Time.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Enter the end time for the select period. It is in EPOCH Time.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Unqiue Id of the the user who has created this task.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "assigneeId",
            "in": "query",
            "description": "Unique Id of the user who performs this task.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clientDetails",
            "in": "query",
            "description": "To get client location details for the task.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activityDetails",
            "in": "query",
            "description": "To get Activity details against the task.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available for the selected period."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "userId does not belong to your account"
          }
        }
      },
      "post": {
        "tags": [
          "Task Management"
        ],
        "operationId": "createTask",
        "summary": "To create new Task",
        "description": "Create Task API allows you to assign a new Task to your users. Using this API, You can Assign a new task with a task summary, description, assigned to user, task owner, the priority of the task, task location",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/taskObject"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskCreationResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "operationId": "getTaskbyId",
        "summary": "To get the task details for the given task id.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "Header for this API. Available values are v1.0.0, Default value is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Unique Id of the task.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clientDetails",
            "in": "query",
            "description": "To get client location details for the task.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activityDetails",
            "in": "query",
            "description": "To get Activity details against the task.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available for the selected Task Id."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Task Management"
        ],
        "operationId": "updateTask",
        "summary": "To update the task description & status.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "Header for this API. Available values are v1.0.0, Default value is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Unique Id of the task.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "To close the task manually send the value as 9.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Task description",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "204": {
            "description": "Invalid Task Id."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "Criteria is not met. Not able to update the status beacuse of current status."
          }
        }
      }
    },
    "/taskLists": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "operationId": "getTaskList",
        "summary": "To get the task list details.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "Header for this API. Available values are v1.0.0, Default value is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskListsObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "taskObjectResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Id of the task",
                  "example": 32
                },
                "name": {
                  "type": "string",
                  "description": "Name of the task",
                  "example": "Document Collection from client"
                },
                "description": {
                  "type": "string",
                  "description": "Detailed description of task.",
                  "example": "Collect documents like PAN Card, Passport and the application form."
                },
                "priority": {
                  "type": "number",
                  "description": "Task priority . 0 - None, 1- Low, 2 - Medium, 3 - High.",
                  "example": 1
                },
                "taskListId": {
                  "type": "string",
                  "description": "Unique Id number of the task list",
                  "example": 23
                },
                "taskListName": {
                  "type": "string",
                  "description": "Name of the Task list",
                  "example": 323
                },
                "ownerId": {
                  "type": "number",
                  "description": "Unique user Id of the Task owner. The user who created this task",
                  "example": 23
                },
                "status": {
                  "type": "string",
                  "description": "Indicates the current status of the task like 1- unassigned, 2- assigned, 3- read, 4- work in progress, 5- overdue, 6- completed, 7- completed early, 8- completed later, 9- manually closed.",
                  "example": 2
                },
                "creationDate": {
                  "type": "number",
                  "description": "Date in which the task is created. It is in EPOCH time.",
                  "example": 1472668079
                },
                "dueDate": {
                  "type": "number",
                  "description": "Due date of the task. Task should be completed on or before this date. It is in EPOCH time.",
                  "example": 1472667900
                },
                "assigneeId": {
                  "type": "number",
                  "description": "Unique id of the user who is going to perform this task.",
                  "example": 148
                },
                "clientId": {
                  "type": "number",
                  "description": "Unique Id of the client. The task should be perfomed at this locaton. It is a Task location.",
                  "example": 4656
                },
                "updationDate": {
                  "type": "number",
                  "description": "Last activity time against this task.",
                  "example": 1472742952
                },
                "departmentId": {
                  "type": "number",
                  "description": "Unique ID of the Department where task need to be done.",
                  "example": null
                },
                "checkinId": {
                  "type": "number",
                  "description": "Unique Id of the check in activity against this task",
                  "example": 323
                },
                "clientName": {
                  "type": "string",
                  "description": "Name of the client. The task should be performed at this client lcoation.",
                  "example": "Cafe coffee day Indiranagar"
                },
                "departmentName": {
                  "type": "string",
                  "description": "Department Name of the client. The task should be perfomed at this client department lcoation.",
                  "example": "Sales department"
                },
                "ownerName": {
                  "type": "string",
                  "description": "Name of the task owner.",
                  "example": "sandeep kumar"
                },
                "asigneeName": {
                  "type": "string",
                  "description": "Name of the assinee. who is going to perform this task.",
                  "example": "lok priya."
                },
                "clientDetails": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "number",
                      "format": "double",
                      "description": "Latitude value of the task location",
                      "example": 28.392323
                    },
                    "long": {
                      "type": "number",
                      "format": "double",
                      "description": "Longitude value of the task location",
                      "example": 77.392323
                    },
                    "address": {
                      "type": "string",
                      "description": "Task location address",
                      "example": "237, okhla phase 3, delhi -110020"
                    },
                    "personName": {
                      "type": "string",
                      "description": "Either client or department Contact person name",
                      "example": "Dinesh"
                    },
                    "emailId": {
                      "type": "string",
                      "description": "Either client or department contact person email id.",
                      "example": "workmate@mapmyindia.com"
                    },
                    "mobileNo": {
                      "type": "string",
                      "description": "Either client or department contact contact mobile number",
                      "example": 9348332321
                    }
                  }
                },
                "activityDetails": {
                  "type": "object",
                  "properties": {
                    "checkInDetails": {
                      "type": "object",
                      "properties": {
                        "lat": {
                          "type": "number",
                          "format": "double",
                          "description": "Latitude value of the check in location",
                          "example": 28.23232
                        },
                        "long": {
                          "type": "number",
                          "format": "double",
                          "description": "Longitude value of the check in location",
                          "example": 77.32823
                        },
                        "address": {
                          "type": "string",
                          "description": "Check in location address",
                          "example": "236, oklha phase 3 , new delhi - 110020"
                        },
                        "time": {
                          "type": "number",
                          "description": "Check in time, in Epoch Timestamp",
                          "example": 1594568020
                        }
                      }
                    },
                    "checkOutDetails": {
                      "type": "object",
                      "properties": {
                        "lat": {
                          "type": "number",
                          "format": "double",
                          "description": "Latitude value of the check in location",
                          "example": 28.23232
                        },
                        "long": {
                          "type": "number",
                          "format": "double",
                          "description": "Longitude value of the check in location",
                          "example": 77.32823
                        },
                        "address": {
                          "type": "string",
                          "description": "Check in location address",
                          "example": "236, oklha phase 3 , new delhi - 110020"
                        },
                        "time": {
                          "type": "number",
                          "description": "Check in time, in Epoch Timestamp",
                          "example": 1594568020
                        },
                        "comments": {
                          "type": "string",
                          "description": "check out comments",
                          "example": "Task is completed"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "taskObject": {
        "type": "object",
        "required": [
          "name",
          "clientId",
          "assigneeId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Task or Task Summary",
            "example": "Collect the cash from customer"
          },
          "description": {
            "type": "string",
            "description": "Deatailed description for the Task",
            "example": "Collect the cash and give the invoice and update the System"
          },
          "ownerId": {
            "type": "string",
            "description": "The user who creates the task. Unique id of the user",
            "example": 2121
          },
          "assigneeId": {
            "type": "number",
            "description": "Id of the user to whom this task is assinged. Unique id of the user.",
            "example": 3232
          },
          "clientId": {
            "type": "number",
            "description": "Unique id of the client. This is the place user will perform the task.",
            "example": 3222
          },
          "prioirity": {
            "type": "number",
            "description": "priority of the Task. 0 - None, 1 - Low, 2 - Medium, 3- High.",
            "example": 1
          },
          "taskListId": {
            "type": "string",
            "description": "Unique Id number of the task list.",
            "example": 23
          }
        }
      },
      "apiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status Code Name",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Describes the type of error based on the type of response code.",
            "example": "Missing parameter name."
          }
        }
      },
      "taskCreationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique Id of the Task.",
            "example": 12
          }
        }
      },
      "taskListsObjectResponse": {
        "type": "object",
        "properties": {
          "taskLists": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Id of the task",
                  "example": 32
                },
                "name": {
                  "type": "string",
                  "description": "Name of the task",
                  "example": "Document Collection from client"
                },
                "description": {
                  "type": "string",
                  "description": "Detailed description of task.",
                  "example": "Collect documents like PAN Card, Passport and the application form."
                },
                "taskListId": {
                  "type": "string",
                  "description": "Unique Id number of the task list. It can be used while creating the Task",
                  "example": 23
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}