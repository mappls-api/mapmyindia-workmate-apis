{
  "openapi": "3.0.1",
  "info": {
    "title": "Workmate APIs",
    "description": "\nThese APIs follow OAuth2 based security. **To know more about how to create your authorization tokens, please use our authorization token URL. More details available**  [here](https://www.mapmyindia.com/api/advanced-maps/doc/authentication-api.php). <br><br>The API leverages OAuth 2.0 based security. Hence, the developer would need to send a request for an access token using their client_id and client_secret to the OAuth API. Once validated from the OAuth API, the access_token and the token_type need to be sent as Authorization header with the value: \"{`token_type`} {`access_token`}‚Äù. <br><strong>Authorization</strong>: `token_type` `access_token`.<br><br>",
    "termsOfService": "https://www.mapmyindia.com/about/terms-conditions",
    "contact": {
      "email": "apisupport@mapmyindia.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://workmate.mapmyindia.com/apis/"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "User Details"
        ],
        "operationId": "getUsers",
        "summary": "To get all the user details which belongs to your organization.",
        "description": "Gives all the users details of your organization. Using this API, you will be able to identify the workmate user id, workplace location, employee Id and other important details related to a user profile. You can only get the list of users who belongs to your organization.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workPlace",
            "in": "query",
            "description": "Send true if you want to get the work place location details",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "send the user Ids in comma separated format to get the list of selected user details. If it is not passed all the user details will be fetched.",
            "required": false,
            "example": "3223,23",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API call is succesful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "content not found. Check your input values."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "userId not belong to your account"
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "Client Management"
        ],
        "operationId": "getClient",
        "summary": "To get all your client details",
        "description": "Get all your client details that comes under your organization. Using this API you will be able to identify the client's unique id, name, address,lat, long, and the contact person details. Also, you can get client's department details belong to the client.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "EPOCH time stamp in local time. Records will be fetched from this start time.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "EPOCH time stamp in local time. Records will be fetched till this end time.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Unique ID of the user. Once it is mentioned, only client created by these user will be displayed.",
            "required": false,
            "example": "332,4323",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "Unique ID of the client. To get the details about only the mentioned client.",
            "required": false,
            "example": "3232,3293",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful API call",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content not available for the selected period."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "userId not belong to your account"
          }
        }
      },
      "post": {
        "tags": [
          "Client Management"
        ],
        "operationId": "createClient",
        "summary": "To create new client",
        "description": "Create Client API allows you to add a new client to your organization. Using this API, You can create a new client with a name, address, lat,long, contact details, Department along with their contact details.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clientObject"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clientCreationResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "The user type is Field user. Only manager and admin type users have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "operationId": "getTask",
        "summary": "To get the list of tasks and their details",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "Header for this API. Available values are v1.0.0, Default value is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Enter the start time for the select period. It is in Epoch Time.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Enter the end time for the select period. It is in EPOCH Time.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "Unqiue Id of the the user who has created this task.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "assigneeId",
            "in": "query",
            "description": "Unique Id of the user who performs this task.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clientDetails",
            "in": "query",
            "description": "To get client location details for the task.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activityDetails",
            "in": "query",
            "description": "To get Activity details against the task.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available for the selected period."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "userId does not belong to your account"
          }
        }
      },
      "post": {
        "tags": [
          "Task Management"
        ],
        "operationId": "createTask",
        "summary": "To create new Task",
        "description": "Create Task API allows you to assign a new Task to your users. Using this API, You can Assign a new task with a task summary, description, assigned to user, task owner, the priority of the task, task location",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/taskObject"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskCreationResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "operationId": "getTaskbyId",
        "summary": "To get the task details for the given task id.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "Header for this API. Available values are v1.0.0, Default value is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Unique Id of the task.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clientDetails",
            "in": "query",
            "description": "To get client location details for the task.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activityDetails",
            "in": "query",
            "description": "To get Activity details against the task.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available for the selected Task Id."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Task Management"
        ],
        "operationId": "updateTask",
        "summary": "To update the task description & status.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "Header for this API. Available values are v1.0.0, Default value is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "description": "Unique Id of the task.",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "To close the task manually send the value as 9.",
            "required": false,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Task description",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "204": {
            "description": "Invalid Task Id."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "Criteria is not met. Not able to update the status beacuse of current status."
          }
        }
      }
    },
    "/taskLists": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "operationId": "getTaskList",
        "summary": "To get the task list details.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "Header for this API. Available values are v1.0.0, Default value is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/taskListsObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      }
    },
    "/reports/movements/{userId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getMovementData",
        "summary": "Get users movement details",
        "description": "Get individual users location data which includes address, time, speed, phones's battery level.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "Unique ID of the user.",
            "example": 32323,
            "schema": {
              "type": "number",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "description": "Start time of the report. At a time maximum of 31 days can data can be fetched together. Time in epoch time.",
            "example": 1595395890,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "description": "Start time of the report. At a time maximum of 31 days can data can be fetched together. Time in epoch time.",
            "example": 1595325880,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movementDataObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available for the selected period."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "The user type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "userId not belong to your account"
          }
        }
      }
    },
    "/configurations/forms": {
      "get": {
        "tags": [
          "Company Configurations"
        ],
        "operationId": "getForms",
        "summary": "To get the form's Id and their details from your account.",
        "description": "It gives all the forms which are created under your account. using this API you can get the unique Ids of different form and it can be used in custom form data API.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "customForms": {
                "schema": {
                  "$ref": "#/components/schemas/formsObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      }
    },
    "/configurations/categories": {
      "get": {
        "tags": [
          "Company Configurations"
        ],
        "operationId": "getclientCategories",
        "summary": "To get the list of client category in an account",
        "description": "It gives all the client categories in an particular account. Category id can be used to create a client.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "customForms": {
                "schema": {
                  "$ref": "#/components/schemas/categoriesObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          }
        }
      }
    },
    "/reports/forms/{formId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "getCustomFormsData",
        "summary": "To get form based check in/out details",
        "description": "Get the complete detail about the check in/check-out activity against the particular form. Get the form Id from the custom form API.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formId",
            "in": "path",
            "description": "Unique ID of the Form. It can be fetched from company setting forms API.",
            "example": "AD329238910921",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "description": "Start time of the report. At a time maximum of 31 days can data can be fetched together. Time in epoch time.",
            "example": 1595395890,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "description": "Start time of the report. At a time maximum of 31 days can data can be fetched together. Time in epoch time.",
            "example": 1595325880,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "description": "Unique ID of the user.",
            "example": 32323,
            "schema": {
              "type": "number",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "clientId",
            "in": "query",
            "required": false,
            "description": "Unique ID of the client.",
            "example": 2133,
            "schema": {
              "type": "number",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/formsDataObjectResponse"
                }
              }
            }
          },
          "204": {
            "description": "Content Not available for the selected period."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "User type is Field user. Only manager and admin type user have the access to this API"
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "userId not belong to your account"
          }
        }
      }
    },
    "/reports/attendances": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "gattendanceetAttendanceData",
        "summary": "Get users attendance details with travelled distance.",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "header",
            "description": "API version should be mentioned in the header along with bearer Token. Available version is v1.0.0, Default version is v1.0.0",
            "example": "v1.0.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/attendanceDataObjectResponse"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiResponse"
                }
              }
            },
            "description": "Bad Request - Invalid ID supplied or invalid data type."
          },
          "401": {
            "description": "Unauthorized Request. Access to API is forbidden."
          },
          "403": {
            "description": "The user type is Field user. Only manager and admin user type user has the access to this API."
          },
          "404": {
            "description": "Not Found - URL Not Found"
          },
          "406": {
            "description": "userId not belong to your account"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "userObjectResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unqiue workmate Id of the user",
                  "example": 232
                },
                "emailId": {
                  "type": "string",
                  "description": "Unique email Id of the user. This will be used to login to workmate account.",
                  "example": "vtsupport@mapmyindia.com"
                },
                "originId": {
                  "type": "integer",
                  "description": "Users workmate account id",
                  "example": 32
                },
                "name": {
                  "type": "string",
                  "description": "Name of the user.",
                  "example": "kalaivanan"
                },
                "status": {
                  "type": "string",
                  "description": "It gives users active or inactive status . 1 - Active user, 0- Inactive user.",
                  "example": 1
                },
                "type": {
                  "type": "integer",
                  "description": "Three user type is there in workmate. 0 -admin, 1 -manager, 2 - field user",
                  "example": 0
                },
                "creationTime": {
                  "description": "Time at which user is being created over workmate. It is an Local EPCH time.",
                  "type": "integer",
                  "example": 1458987749
                },
                "workplaceId": {
                  "type": "integer",
                  "description": "Unique Id of the Work place.",
                  "example": 32
                },
                "costFactor": {
                  "type": "number",
                  "format": "float",
                  "description": "per km travelled cost. It will be multiplyed against distance travelled by the user.",
                  "example": 3.4
                },
                "reportingToName": {
                  "type": "string",
                  "description": "Direct manager of the user.",
                  "example": "Sanjay"
                },
                "reportingToId": {
                  "type": "string",
                  "description": "Manger's unique user Id",
                  "example": 2323
                },
                "employeeId": {
                  "type": "string",
                  "description": "Employee unquie ID based on the company record",
                  "example": "CE003121"
                },
                "branchName": {
                  "type": "string",
                  "description": "Users branch name of the work place.",
                  "example": "Bangalore"
                },
                "branchCode": {
                  "type": "string",
                  "description": "Users branch code of the work place.",
                  "example": "CE12"
                },
                "workPlace": {
                  "$ref": "#/components/schemas/workPlaceDetailsObjectResponse"
                }
              }
            }
          }
        }
      },
      "clientObjectResponse": {
        "type": "object",
        "properties": {
          "clients": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the client or Customer",
                  "example": 3232
                },
                "status": {
                  "type": "integer",
                  "description": "Client status. 1 - active, 0 - inactive",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "description": "Name of the client or customer",
                  "example": "ABN pvt.ltd"
                },
                "address": {
                  "type": "string",
                  "description": "Location address of the client or customer.",
                  "example": "237, okhla phase 3, new delhi -110020"
                },
                "contactPersonName": {
                  "type": "string",
                  "description": "Contact person name of client or customer location",
                  "example": "Dinesh"
                },
                "emailId": {
                  "type": "string",
                  "description": "Client or Customer contact email id.",
                  "example": "workmate@mapmyindia.com"
                },
                "mobileNo": {
                  "type": "string",
                  "description": "Client or Customer contact mobile number",
                  "example": 9348332321
                },
                "userId": {
                  "type": "integer",
                  "description": "The Id of the user who created this client or customer",
                  "example": 3232
                },
                "userName": {
                  "type": "string",
                  "description": "Name of the user who has created this client.",
                  "example": "kalaivanan"
                },
                "typeId": {
                  "type": "integer",
                  "description": "Unqiue ID of the client type/category.",
                  "example": 0
                },
                "typeName": {
                  "type": "string",
                  "description": "Client category/type name",
                  "example": "Service stations"
                },
                "lat": {
                  "type": "number",
                  "format": "double",
                  "description": "Latitude of the client location.",
                  "example": 28.551506
                },
                "long": {
                  "type": "number",
                  "format": "double",
                  "description": "Longitude of the client location.",
                  "example": 77.268118
                },
                "creationTime": {
                  "type": "integer",
                  "description": "Client creatation time in Local Epoch Time stamp.",
                  "example": 1575104435
                },
                "updationTime": {
                  "type": "integer",
                  "description": "Last updated time against the client in Epoch Time.",
                  "example": 1575104737
                },
                "creationTimeStr": {
                  "type": "string",
                  "description": "Client creation time in string format",
                  "example": "01 Apr 2018"
                },
                "updationTimeStr": {
                  "type": "string",
                  "description": "Client updation time in string format",
                  "example": "01 Apr 2018"
                },
                "viewRight": {
                  "type": "integer",
                  "description": "view rights of the client. 0-public , 1-team , 2-manager",
                  "example": 2
                },
                "departments": {
                  "type": "array",
                  "description": "Details of Departments associated with the clients",
                  "items": {
                    "$ref": "#/components/schemas/clientDepartmentObjectResponse"
                  }
                },
                "lastActivity": {
                  "type": "object",
                  "properties": {
                    "Status": {
                      "type": "integer",
                      "description": "Last activity done by the user. 3- check-in , 4- check out, 5- client created.",
                      "example": 4
                    },
                    "time": {
                      "type": "integer",
                      "description": "Time at which last activity is being carried out in EPOCH Time.",
                      "example": 1525150144
                    },
                    "Lat": {
                      "type": "number",
                      "format": "double",
                      "description": "Last activity location latitude.",
                      "example": 28.550646
                    },
                    "Long": {
                      "type": "number",
                      "format": "double",
                      "description": "Last activity location Longitude.",
                      "example": 77.269003
                    },
                    "visitedUserId": {
                      "type": "integer",
                      "description": "Unique ID of the user who has done the last activity against this client.",
                      "example": 3223
                    },
                    "vistedUserName": {
                      "type": "string",
                      "description": "Name of the user who has done the last activity aginst this client.",
                      "example": "Megha Soni"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "clientObject": {
        "type": "object",
        "required": [
          "clientName"
        ],
        "properties": {
          "clientName": {
            "type": "string",
            "description": "Name of the client or customer location",
            "example": "ABN pvt.ltd"
          },
          "address": {
            "type": "string",
            "description": "Client location address.",
            "example": "237, okhla phase 3, new delhi -110020"
          },
          "contactPersonName": {
            "type": "string",
            "description": "Clients or customers Contact person name",
            "example": "Dinesh"
          },
          "emailId": {
            "type": "string",
            "description": "Clients or Customers contact email id.",
            "example": "workmate@mapmyindia.com"
          },
          "mobileNo": {
            "type": "string",
            "description": "Client or Customer contact mobile number",
            "example": 9348332321
          },
          "typeId": {
            "type": "integer",
            "description": "Customer or client category based on your compnay details",
            "example": 1
          },
          "lat": {
            "type": "number",
            "format": "double",
            "description": "Latitude of the client location.",
            "example": 28.551504
          },
          "long": {
            "type": "number",
            "format": "double",
            "description": "Longitude of the client location.",
            "example": 77.268118
          },
          "viewRight": {
            "type": "integer",
            "description": "Clients view right to the users. 0-public , 1-team , 2-manager",
            "example": 2
          },
          "departments": {
            "type": "array",
            "description": "Departments details associated with the clients",
            "items": {
              "$ref": "#/components/schemas/clientDepartmentObject"
            }
          }
        }
      },
      "taskObjectResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Id of the task",
                  "example": 32
                },
                "name": {
                  "type": "string",
                  "description": "Name of the task",
                  "example": "Document Collection from client"
                },
                "description": {
                  "type": "string",
                  "description": "Detailed description of task.",
                  "example": "Collect documents like PAN Card, Passport and the application form."
                },
                "priority": {
                  "type": "number",
                  "description": "Task priority . 0 - None, 1- Low, 2 - Medium, 3 - High.",
                  "example": 1
                },
                "taskListId": {
                  "type": "string",
                  "description": "Unique Id number of the task list",
                  "example": 23
                },
                "taskListName": {
                  "type": "string",
                  "description": "Name of the Task list",
                  "example": 323
                },
                "ownerId": {
                  "type": "number",
                  "description": "Unique user Id of the Task owner. The user who created this task",
                  "example": 23
                },
                "status": {
                  "type": "string",
                  "description": "Indicates the current status of the task like 1- unassigned, 2- assigned, 3- read, 4- work in progress, 5- overdue, 6- completed, 7- completed early, 8- completed later, 9- manually closed.",
                  "example": 2
                },
                "creationDate": {
                  "type": "number",
                  "description": "Date in which the task is created. It is in EPOCH time.",
                  "example": 1472668079
                },
                "dueDate": {
                  "type": "number",
                  "description": "Due date of the task. Task should be completed on or before this date. It is in EPOCH time.",
                  "example": 1472667900
                },
                "assigneeId": {
                  "type": "number",
                  "description": "Unique id of the user who is going to perform this task.",
                  "example": 148
                },
                "clientId": {
                  "type": "number",
                  "description": "Unique Id of the client. The task should be perfomed at this locaton. It is a Task location.",
                  "example": 4656
                },
                "updationDate": {
                  "type": "number",
                  "description": "Last activity time against this task.",
                  "example": 1472742952
                },
                "departmentId": {
                  "type": "number",
                  "description": "Unique ID of the Department where task need to be done.",
                  "example": null
                },
                "checkinId": {
                  "type": "number",
                  "description": "Unique Id of the check in activity against this task",
                  "example": 323
                },
                "clientName": {
                  "type": "string",
                  "description": "Name of the client. The task should be performed at this client lcoation.",
                  "example": "Cafe coffee day Indiranagar"
                },
                "departmentName": {
                  "type": "string",
                  "description": "Department Name of the client. The task should be perfomed at this client department lcoation.",
                  "example": "Sales department"
                },
                "ownerName": {
                  "type": "string",
                  "description": "Name of the task owner.",
                  "example": "sandeep kumar"
                },
                "asigneeName": {
                  "type": "string",
                  "description": "Name of the assinee. who is going to perform this task.",
                  "example": "lok priya."
                },
                "clientDetails": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "number",
                      "format": "double",
                      "description": "Latitude value of the task location",
                      "example": 28.392323
                    },
                    "long": {
                      "type": "number",
                      "format": "double",
                      "description": "Longitude value of the task location",
                      "example": 77.392323
                    },
                    "address": {
                      "type": "string",
                      "description": "Task location address",
                      "example": "237, okhla phase 3, delhi -110020"
                    },
                    "personName": {
                      "type": "string",
                      "description": "Either client or department Contact person name",
                      "example": "Dinesh"
                    },
                    "emailId": {
                      "type": "string",
                      "description": "Either client or department contact person email id.",
                      "example": "workmate@mapmyindia.com"
                    },
                    "mobileNo": {
                      "type": "string",
                      "description": "Either client or department contact contact mobile number",
                      "example": 9348332321
                    }
                  }
                },
                "activityDetails": {
                  "type": "object",
                  "properties": {
                    "checkInDetails": {
                      "type": "object",
                      "properties": {
                        "lat": {
                          "type": "number",
                          "format": "double",
                          "description": "Latitude value of the check in location",
                          "example": 28.23232
                        },
                        "long": {
                          "type": "number",
                          "format": "double",
                          "description": "Longitude value of the check in location",
                          "example": 77.32823
                        },
                        "address": {
                          "type": "string",
                          "description": "Check in location address",
                          "example": "236, oklha phase 3 , new delhi - 110020"
                        },
                        "time": {
                          "type": "number",
                          "description": "Check in time, in Epoch Timestamp",
                          "example": 1594568020
                        }
                      }
                    },
                    "checkOutDetails": {
                      "type": "object",
                      "properties": {
                        "lat": {
                          "type": "number",
                          "format": "double",
                          "description": "Latitude value of the check in location",
                          "example": 28.23232
                        },
                        "long": {
                          "type": "number",
                          "format": "double",
                          "description": "Longitude value of the check in location",
                          "example": 77.32823
                        },
                        "address": {
                          "type": "string",
                          "description": "Check in location address",
                          "example": "236, oklha phase 3 , new delhi - 110020"
                        },
                        "time": {
                          "type": "number",
                          "description": "Check in time, in Epoch Timestamp",
                          "example": 1594568020
                        },
                        "comments": {
                          "type": "string",
                          "description": "check out comments",
                          "example": "Task is completed"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "taskObject": {
        "type": "object",
        "required": [
          "name",
          "clientId",
          "assigneeId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Task or Task Summary",
            "example": "Collect the cash from customer"
          },
          "description": {
            "type": "string",
            "description": "Deatailed description for the Task",
            "example": "Collect the cash and give the invoice and update the System"
          },
          "ownerId": {
            "type": "string",
            "description": "The user who creates the task. Unique id of the user",
            "example": 2121
          },
          "assigneeId": {
            "type": "number",
            "description": "Id of the user to whom this task is assinged. Unique id of the user.",
            "example": 3232
          },
          "clientId": {
            "type": "number",
            "description": "Unique id of the client. This is the place user will perform the task.",
            "example": 3222
          },
          "prioirity": {
            "type": "number",
            "description": "priority of the Task. 0 - None, 1 - Low, 2 - Medium, 3- High.",
            "example": 1
          },
          "taskListId": {
            "type": "string",
            "description": "Unique Id number of the task list.",
            "example": 23
          }
        }
      },
      "movementDataObjectResponse": {
        "type": "object",
        "properties": {
          "movements": {
            "type": "array",
            "items": {
              "properties": {
                "address": {
                  "type": "string",
                  "description": "Users location address for the given time.",
                  "example": "40/2, Kalasipalyam, Bengaluru, Karnataka. 18 m from MP Auto Consultancy pin- 560002 (India)"
                },
                "distance": {
                  "type": "string",
                  "description": "Total traveled distance from start time to this location for the selected period. It is in a kilometer.",
                  "example": "10. 00"
                },
                "driftStatus": {
                  "type": "integer",
                  "description": "Based on the GPS drift this location data is accepted or rejected will be stated. 1 - accepted, 0 - rejected.",
                  "example": 1
                },
                "heading": {
                  "type": "integer",
                  "description": "GPS angle. It gives the direction of the user.",
                  "example": 234
                },
                "lat": {
                  "type": "number",
                  "format": "double",
                  "description": "Latitude value of location",
                  "example": 28.550607
                },
                "long": {
                  "type": "number",
                  "format": "double",
                  "description": "longitude value of the location.",
                  "example": 77.843835
                },
                "speed": {
                  "type": "integer",
                  "description": "Speed of user at that time. It is a GPS speed.It is in Km/hr",
                  "example": 234
                },
                "movementStatus": {
                  "type": "string",
                  "description": "Stopped or moving status will be there for the user.",
                  "example": "stopped"
                },
                "gpsTime": {
                  "type": "integer",
                  "description": "GPS time in epochtime stamp. It is the time at which location is being collected from the mobile phone.",
                  "example": 1593856120
                },
                "insertTime": {
                  "type": "integer",
                  "description": "Time at which location packet is being received at the server end. It is normally called as GPRS time. it is in EPOCH time format.",
                  "example": 1593856203
                },
                "internalBatteryLevel": {
                  "type": "integer",
                  "description": "Phones battery percentage.",
                  "example": 24
                }
              }
            }
          }
        }
      },
      "attendanceDataObjectResponse": {
        "type": "object",
        "properties": {
          "attendances": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the user.",
                  "example": "Lok Priya"
                },
                "employeeId": {
                  "type": "string",
                  "description": "Id of the employee",
                  "example": "ce003232"
                },
                "branchName": {
                  "type": "string",
                  "description": "Employees Branch Name",
                  "example": "Bangalore"
                },
                "branchCode": {
                  "type": "string",
                  "description": "Employee's Branch Code",
                  "example": 232
                },
                "userId": {
                  "type": "string",
                  "description": "Employee's Branch Code",
                  "example": 232
                },
                "workStartTime": {
                  "type": "integer",
                  "description": "Time at which work is being started in Epoch Time.",
                  "example": 1573064999
                },
                "workEndTime": {
                  "type": "integer",
                  "description": "Time at which work is being started in Epoch Time.",
                  "example": 1573018435
                },
                "workEndRemark": {
                  "type": "string",
                  "description": "Remarks entered by the user while concluding the work.",
                  "example": "Completed todays work."
                },
                "workStartRemark": {
                  "type": "string",
                  "description": "emarks entered by the user while starting the work.",
                  "example": "Starting my work from client location."
                },
                "workEndAddress": {
                  "type": "string",
                  "description": "Location at which work is being concluded",
                  "example": "237,okhla phase3, New delhi -110020"
                },
                "workStartAddress": {
                  "type": "string",
                  "description": "Location at which work is being concluded",
                  "example": "237,okhla phase3, New delhi -110020"
                },
                "workEndLatitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Latitude value of Work end location",
                  "example": 28.550607
                },
                "workEndLongitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Longitude value of Work end location",
                  "example": 77.268906
                },
                "workStartLatitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Longitude value of Work Start location",
                  "example": 28.533615
                },
                "workStartLongitude": {
                  "type": "number",
                  "format": "double",
                  "description": "Longitude value of Work Start location",
                  "example": 77.2596
                },
                "workEndOdometer": {
                  "type": "number",
                  "format": "float",
                  "description": "work end Odometer reading.",
                  "example": 20
                },
                "workStartOdometer": {
                  "type": "number",
                  "format": "float",
                  "description": "Work start Odometer reading.",
                  "example": 10
                },
                "costFactor": {
                  "type": "number",
                  "format": "float",
                  "description": "Per km traveled cost. It will be multiplied against distance traveled by the user.",
                  "example": 3.5
                },
                "distance": {
                  "type": "number",
                  "format": "double",
                  "description": "Total travel distance between work start to work end activity. It is calculated based on the location details collected from app",
                  "example": 26.07931
                }
              }
            }
          }
        }
      },
      "formsObjectResponse": {
        "type": "object",
        "properties": {
          "forms": {
            "type": "array",
            "items": {
              "properties": {
                "formId": {
                  "type": "string",
                  "description": "Forms unique ID, Which will be used in Custom Forms data API to get the details.",
                  "example": "5bb5e97a390bec703259364d"
                },
                "formName": {
                  "type": "string",
                  "description": "Name of the Form.",
                  "example": "Delivery Details"
                },
                "formDescription": {
                  "type": "string",
                  "description": "Detailed description of the Form",
                  "example": "Enter the delivery details while doing checkout"
                }
              }
            }
          }
        }
      },
      "formsDataObjectResponse": {
        "type": "object",
        "properties": {
          "formsData": {
            "type": "array",
            "items": {
              "properties": {
                "employeeName": {
                  "type": "string",
                  "description": "Name of the Employee",
                  "example": "kalaivanan Sundaram"
                },
                "employeeId": {
                  "type": "string",
                  "description": "Id of the employee",
                  "example": "ce12345"
                },
                "branchName": {
                  "type": "string",
                  "description": "Name of the branch",
                  "example": "okhla"
                },
                "branchCode": {
                  "type": "string",
                  "description": "Code number of the branch",
                  "example": 3232
                },
                "userId": {
                  "type": "number",
                  "description": "Unique id of the workmate user.",
                  "example": 3232
                },
                "clientName": {
                  "type": "string",
                  "description": "Name of Checked in Client.",
                  "example": "Mapmyindia"
                },
                "departmentName": {
                  "type": "string",
                  "description": "Name of the Checked in department",
                  "example": "product"
                },
                "contactPersonName": {
                  "type": "string",
                  "description": "Either client or department contact person name",
                  "example": "sundaram"
                },
                "checkinDateTime": {
                  "type": "string",
                  "description": "Date & Time at which user checked in against the client",
                  "example": "06/11/2019 11:06:44 AM"
                },
                "checkinAddress": {
                  "type": "string",
                  "description": "checked in location address",
                  "example": "1134, indira nagar, second stage, Bangalore -560008"
                },
                "checkoutDateTime": {
                  "type": "string",
                  "description": "Date & Time at which user checked out against the client",
                  "example": "06/11/2019 12:06:44 PM"
                },
                "checkoutAddress": {
                  "type": "string",
                  "description": "checked out location address",
                  "example": "1135, indira nagar, second stage, Bangalore -560008"
                },
                "totalHoursSpent": {
                  "type": "string",
                  "description": "Total time spent at the client location. The time differnece between check-in to check out.",
                  "example": "00:03:00"
                },
                "remarks": {
                  "type": "string",
                  "description": "Comments entered by the user during the check-out process.",
                  "example": "collected the parcel."
                },
                "tags": {
                  "type": "string",
                  "description": "List of selected tags during check in. It indicates the check in purpose.",
                  "example": "Meeting"
                },
                "customFormData": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Name of the question or title.",
                        "example": "Enter the cash collection details."
                      },
                      "value": {
                        "type": "string",
                        "description": "Response to the question (lable)",
                        "example": "Rs. 250 is being collected."
                      }
                    }
                  }
                },
                "clientEmailId": {
                  "type": "string",
                  "description": "Contact person email id of the checked in client or the department",
                  "example": "sundaram@gmail.com"
                },
                "clientMobileNo": {
                  "type": "string",
                  "description": "Contact person mobile number of the checked in client or department",
                  "example": 934838232
                }
              }
            }
          }
        }
      },
      "clientDepartmentObjectResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unqiue Id of the department",
            "example": 32
          },
          "name": {
            "type": "string",
            "description": "Name of the department",
            "example": "product team"
          },
          "contactPersonName": {
            "type": "string",
            "description": "Name of the department contact person",
            "example": "sundaram"
          },
          "mobileNo": {
            "type": "string",
            "description": "Department cotnact person mobile number",
            "example": 9349439334
          },
          "emailId": {
            "type": "string",
            "description": "Department cotnact person email Id",
            "example": "sales@mapmyindia.com"
          },
          "creationTime": {
            "type": "string",
            "description": "Time at which this department is being added. EPoch time.",
            "example": 1516618791
          },
          "updationTime": {
            "type": "string",
            "description": "Time at which this department is being upated last time. It is in Epoch time.",
            "example": 1593088033
          }
        }
      },
      "clientDepartmentObject": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the department",
            "example": "product team"
          },
          "contactPersonName": {
            "type": "string",
            "description": "Name of the department contact person",
            "example": "sundaram"
          },
          "mobileNo": {
            "type": "string",
            "description": "Department cotnact person mobile number",
            "example": 9349439334
          },
          "emailId": {
            "type": "string",
            "description": "Department cotnact person email Id",
            "example": "sales@mapmyindia.com"
          }
        }
      },
      "workPlaceDetailsObjectResponse": {
        "properties": {
          "lat": {
            "type": "number",
            "description": "Workmate place location latitude",
            "example": 28.3923
          },
          "long": {
            "type": "number",
            "description": "Workmate place location longitude.",
            "example": 78.3223
          },
          "name": {
            "type": "string",
            "description": "Work location name",
            "example": "Bangalore office"
          },
          "address": {
            "type": "string",
            "description": "work place address",
            "example": "1134, Dr SK Karim Khan Road, HAL Stage 2, Indiranagar, Bengaluru, Karnataka. 0 m from MapmyIndia Bangalore pin-560008 (India)"
          }
        }
      },
      "categoriesObjectResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "properties": {
                "categoryId": {
                  "type": "string",
                  "description": "Unique Id for the category",
                  "example": 122
                },
                "categoryName": {
                  "type": "string",
                  "description": "Name of the category",
                  "example": "Service Stations"
                }
              }
            }
          }
        }
      },
      "apiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status Code Name",
            "example": 400
          },
          "message": {
            "type": "string",
            "description": "Describes the type of error based on the type of response code.",
            "example": "Missing parameter name."
          }
        }
      },
      "clientCreationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique Id of the client",
            "example": 1212
          }
        }
      },
      "taskCreationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Unique Id of the Task.",
            "example": 12
          }
        }
      },
      "taskListsObjectResponse": {
        "type": "object",
        "properties": {
          "taskLists": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique Id of the task",
                  "example": 32
                },
                "name": {
                  "type": "string",
                  "description": "Name of the task",
                  "example": "Document Collection from client"
                },
                "description": {
                  "type": "string",
                  "description": "Detailed description of task.",
                  "example": "Collect documents like PAN Card, Passport and the application form."
                },
                "taskListId": {
                  "type": "string",
                  "description": "Unique Id number of the task list. It can be used while creating the Task",
                  "example": 23
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}